{"version":3,"file":"static/js/785.59bbc552.chunk.js","mappings":"yNA0CA,UAtCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,wFACbH,EADa,2CAGSI,EAAAA,EAAAA,IAAWJ,GAHpB,OAGPF,EAHO,OAIbC,EAAWD,GAJE,gDAMbO,QAAQC,IAAI,SANC,uIAAH,qDAYhBH,GACD,GAAE,CAACH,KAGF,8BACGF,EAAQS,QACP,wBACGT,EAAQU,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGV,EADE,OAQf,oEAIP,C,+LC/BM,SAAeW,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,qBADlB,uBACGC,EADH,EACGA,KACRR,QAAQC,IAAIO,EAAKC,SAFZ,kBAGED,EAAKC,SAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBf,GAAxB,yFACkBY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,oBADlB,uBACGa,EADH,EACGA,KACRR,QAAQC,IAAIO,GAFP,kBAGEA,GAHF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BhB,GAA1B,yFACkBY,EAAAA,EAAAA,IAAA,iBACXZ,EADW,4BADlB,uBACGa,EADH,EACGA,KAGRR,QAAQC,IAAIO,GAJP,kBAKEA,EAAKI,MALP,kEAQA,SAAeb,EAAtB,kC,aAAO,O,oBAAA,WAA0BJ,GAA1B,yFACkBY,EAAAA,EAAAA,IAAA,iBACXZ,EADW,mCADlB,uBACGa,EADH,EACGA,KAGRR,QAAQC,IAAIO,EAAKC,SAJZ,kBAKED,EAAKC,SALP,kEAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACkBP,EAAAA,EAAAA,IAAA,8BAAiCO,EAAjC,YADlB,uBACGN,EADH,EACGA,KACRR,QAAQC,IAAIO,EAAKC,SAFZ,kBAGED,EAAKC,SAHP,kEAnCPF,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBQ,QAJc,mC","sources":["components/Reviews/Reviews.js","service/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviews } from 'service/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState('');\n  const { id } = useParams();\n\n  useEffect(() => {\n    const castSearch = async () => {\n      if (id) {\n        try {\n          const reviews = await getReviews(id);\n          setReviews(reviews);\n        } catch (error) {\n          console.log('error');\n        } finally {\n        }\n      }\n      return;\n    };\n    castSearch();\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this film</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'ff340e70eb42d683311a67813670b4e7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function getTrending() {\n  const { data } = await axios.get(`/trending/all/day`);\n  console.log(data.results);\n  return data.results;\n}\n\nexport async function getMovie(id) {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  console.log(data);\n  return data;\n}\n\nexport async function getCredits(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?language=en-US`\n  );\n  console.log(data);\n  return data.cast;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  console.log(data.results);\n  return data.results;\n}\n\n// ff340e70eb42d683311a67813670b4e7\n\nexport async function getSearch(query) {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=1`);\n  console.log(data.results);\n  return data.results;\n}\n\n\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","castSearch","getReviews","console","log","length","map","author","content","getTrending","axios","data","results","getMovie","getCredits","cast","getSearch","query","api_key"],"sourceRoot":""}
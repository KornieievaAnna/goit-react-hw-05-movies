{"version":3,"file":"static/js/541.69ca1ce1.chunk.js","mappings":"kOAwDA,UAnDa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAuBR,OApBAE,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,wFACbL,EADa,iCAGbE,QAAQC,IAAI,WAHC,UAIOG,EAAAA,EAAAA,IAAWN,GAJlB,OAIPF,EAJO,OAKbI,QAAQC,IAAIL,GACZC,EAASD,GANI,kDAQbI,QAAQC,IAAI,SARC,wIAAH,qDAchBE,GACD,GAAE,CAACL,KAGF,8BACGF,EAAMS,OAAS,IACd,wBACGT,EAAMU,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACT,0BACGA,GACC,gBAAKC,IA7BF,4BA6BkBD,EAAcE,IAAKH,EAAMI,MAAO,OAErD,gBACEF,IAAKG,EACLF,IAAI,YACJC,MAAO,IACPE,OAAQ,OAGZ,uBAAIN,KACJ,sCAAcD,OAZPT,EADA,OAoBpB,C,+LC7CM,SAAeiB,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,qBADlB,uBACGC,EADH,EACGA,KACRjB,QAAQC,IAAIgB,EAAKC,SAFZ,kBAGED,EAAKC,SAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBrB,GAAxB,yFACkBkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBADlB,uBACGmB,EADH,EACGA,KACRjB,QAAQC,IAAIgB,GAFP,kBAGEA,GAHF,kEAMA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAA0BN,GAA1B,yFACkBkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,4BADlB,uBACGmB,EADH,EACGA,KAGRjB,QAAQC,IAAIgB,GAJP,kBAKEA,EAAKG,MALP,kEAQA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA0BvB,GAA1B,yFACkBkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,mCADlB,uBACGmB,EADH,EACGA,KAGRjB,QAAQC,IAAIgB,EAAKC,SAJZ,kBAKED,EAAKC,SALP,kEAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACkBP,EAAAA,EAAAA,IAAA,8BAAiCO,EAAjC,YADlB,uBACGN,EADH,EACGA,KACRjB,QAAQC,IAAIgB,EAAKC,SAFZ,kBAGED,EAAKC,SAHP,kEAnCPF,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBQ,QAJc,mC","sources":["components/Cast/Cast.js","service/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCredits } from 'service/api';\nimport ImageNotFound from './ImageNotFound.png';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState('');\n  const { id } = useParams();\n  const ImageUrl = '//image.tmdb.org/t/p/w500';\n\n  console.log(id);\n\n  useEffect(() => {\n    const castSearch = async () => {\n      if (id) {\n        try {\n          console.log('working');\n          const casts = await getCredits(id);\n          console.log(casts);\n          setCasts(casts);\n        } catch (error) {\n          console.log('error');\n        } finally {\n        }\n      }\n      return;\n    };\n    castSearch();\n  }, [id]);\n\n  return (\n    <>\n      {casts.length > 0 && (\n        <ul>\n          {casts.map(({ id, character, name, profile_path }) => (\n            <li key={id}>\n              {profile_path ? (\n                <img src={ImageUrl + profile_path} alt={name} width={280} />\n              ) : (\n                <img\n                  src={ImageNotFound}\n                  alt=\"Not found\"\n                  width={280}\n                  height={420}\n                />\n              )}\n              <p>{name}</p>\n              <p>Character:{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'ff340e70eb42d683311a67813670b4e7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function getTrending() {\n  const { data } = await axios.get(`/trending/all/day`);\n  console.log(data.results);\n  return data.results;\n}\n\nexport async function getMovie(id) {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  console.log(data);\n  return data;\n}\n\nexport async function getCredits(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?language=en-US`\n  );\n  console.log(data);\n  return data.cast;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  console.log(data.results);\n  return data.results;\n}\n\n// ff340e70eb42d683311a67813670b4e7\n\nexport async function getSearch(query) {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=1`);\n  console.log(data.results);\n  return data.results;\n}\n\n\n"],"names":["useState","casts","setCasts","id","useParams","console","log","useEffect","castSearch","getCredits","length","map","character","name","profile_path","src","alt","width","ImageNotFound","height","getTrending","axios","data","results","getMovie","cast","getReviews","getSearch","query","api_key"],"sourceRoot":""}
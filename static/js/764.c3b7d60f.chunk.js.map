{"version":3,"file":"static/js/764.c3b7d60f.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/MovieGallery/MovieGallery.js","components/MovieGallery/MovieGallery.styled.js","pages/Movies.js","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.p`\ncolor: #fffad9`;\n","import { useLocation, NavLink } from 'react-router-dom';\nimport { Card} from './MovieGallery.styled';\n\nexport default function MovieGallery({ movie }) {\n  const location = useLocation();\n  const { id, name, title, poster_path } = movie;\n  const ImageUrl = '//image.tmdb.org/t/p/w500';\n  return (\n    <Card key={id}>\n      <NavLink to={`/movie/${id}`} state={{ from: location }}>\n        <img src={ImageUrl + poster_path} alt={title} width={280} />\n        <h3>{title ?? name}</h3>\n      </NavLink>\n    </Card>\n  );\n}\n","import styled from 'styled-components';\nexport const Card = styled.li`\n  display: flex;\n  height: 480px;\n  width: 280px;\n  flex-direction: column;\n  padding: 1rem 1rem 2rem;\n  border: solid 1px #fffad9;\n  // box-shadow: 0 0 1px #fffad9, 0 0 3px #fffad9, 0 0 5px #fffad9,\n  //   0 0 10px #fffad9;\n  border-radius: 3px;\n  &:hover {\n    box-shadow: 0 0 2px #fffad9, 0 0 4px #fffad9, 0 0 6px #fffad9,\n      0 0 15px #fffad9;\n    border-radius: 3px;\n  }\n`;\n\n","import { useState, useEffect } from 'react';\nimport { getSearch } from 'service/api';\nimport Notiflix from 'notiflix';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieGallery from '../components/MovieGallery/MovieGallery';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { GlowingBtn } from '../components/Layout/Layout.styled';\nimport { Text } from '../components/Cast/Cast.styled';\n\n\n\n// import { AiOutlineSearch } from 'react-icons/ai';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const searchTitle = searchParams.get('query');\n  const [noFilms, setNoFilms] = useState(false);\n\n  useEffect(() => {\n    const movieTrending = async () => {\n      if (!searchTitle) {\n        return;\n      }\n      setLoading(true);\n      try {\n        const movie = await getSearch(searchTitle);\n        setMovies(movie);\n        if (movie.length === 0) {\n          setNoFilms(true);\n        } else {\n          setNoFilms(false);\n        }\n      } catch (error) {\n        console.log('error');\n      } finally {\n        setLoading(false);\n      }\n    };\n    movieTrending();\n  }, [searchTitle]);\n\n  const handleNameChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      Notiflix.Notify.failure(`Please enter a name`);\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const onSubmit = name => {\n    if (searchTitle === name) {\n      Notiflix.Notify.info(\n        `Your request \"${name}\" has already been completed! :-)`\n      );\n      return;\n    }\n    setQuery(name);\n    setSearchParams({ query: query });\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <GlowingBtn type=\"submit\">\n          <span>Search</span>\n        </GlowingBtn>\n\n        <input\n          type=\"text\"\n          // autocomplete=\"off\"\n          // autofocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={handleNameChange}\n        />\n      </form>\n      {loading && <Loader />}\n      {noFilms && <Text>Films not found ðŸ˜­</Text>}\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <MovieGallery key={movie.id} movie={movie} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'ff340e70eb42d683311a67813670b4e7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function getTrending() {\n  const { data } = await axios.get(`/trending/all/day`);\n  console.log(data.results);\n  return data.results;\n}\n\nexport async function getMovie(id) {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  console.log(data);\n  return data;\n}\n\nexport async function getCredits(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?language=en-US`\n  );\n  console.log(data);\n  return data.cast;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  console.log(data.results);\n  return data.results;\n}\n\n// ff340e70eb42d683311a67813670b4e7\n\nexport async function getSearch(query) {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=1`);\n  console.log(data.results);\n  return data.results;\n}\n\n\n"],"names":["Text","styled","MovieGallery","movie","location","useLocation","id","name","title","poster_path","to","state","from","src","alt","width","Card","useSearchParams","searchParams","setSearchParams","useState","loading","setLoading","query","setQuery","movies","setMovies","searchTitle","get","noFilms","setNoFilms","useEffect","movieTrending","getSearch","length","console","log","onSubmit","Notiflix","event","preventDefault","trim","type","placeholder","value","onChange","currentTarget","toLowerCase","map","getTrending","axios","data","results","getMovie","getCredits","cast","getReviews","api_key"],"sourceRoot":""}